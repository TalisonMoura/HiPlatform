// <auto-generated />
using System;
using HiPlatform.Api.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HiPlatform.Api.Migrations
{
    [DbContext(typeof(AplicacaoDbContexto))]
    partial class AplicacaoDbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HiPlatfromApi.Entidades.Alimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ElementoEstoqueId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ElementoEstoqueId");

                    b.ToTable("Alimento", (string)null);
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.ElementoEstoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CnpjFabricante")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Elemento_Estoque", (string)null);
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ElementoEstoqueId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ElementoEstoqueId");

                    b.ToTable("Estoque", (string)null);
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.PesquisaMercado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InstitutoPesquisa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("ProdutoLimpezaId")
                        .HasColumnType("uuid");

                    b.Property<int>("Satisfacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoLimpezaId");

                    b.ToTable("Pesquisa_Mercado", (string)null);
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.ProdutoLimpeza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ElementoEstoqueId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ElementoEstoqueId");

                    b.ToTable("Produto_Limpeza", (string)null);
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.Alimento", b =>
                {
                    b.HasOne("HiPlatfromApi.Entidades.ElementoEstoque", "ElementoEstoque")
                        .WithMany("Alimentos")
                        .HasForeignKey("ElementoEstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementoEstoque");
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.Estoque", b =>
                {
                    b.HasOne("HiPlatfromApi.Entidades.ElementoEstoque", "ElementoEstoque")
                        .WithMany("Estoques")
                        .HasForeignKey("ElementoEstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementoEstoque");
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.PesquisaMercado", b =>
                {
                    b.HasOne("HiPlatfromApi.Entidades.ProdutoLimpeza", "ProdutoLimpeza")
                        .WithMany("Pesquisas")
                        .HasForeignKey("ProdutoLimpezaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoLimpeza");
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.ProdutoLimpeza", b =>
                {
                    b.HasOne("HiPlatfromApi.Entidades.ElementoEstoque", "ElementoEstoque")
                        .WithMany("ProdutosLimpeza")
                        .HasForeignKey("ElementoEstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementoEstoque");
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.ElementoEstoque", b =>
                {
                    b.Navigation("Alimentos");

                    b.Navigation("Estoques");

                    b.Navigation("ProdutosLimpeza");
                });

            modelBuilder.Entity("HiPlatfromApi.Entidades.ProdutoLimpeza", b =>
                {
                    b.Navigation("Pesquisas");
                });
#pragma warning restore 612, 618
        }
    }
}
